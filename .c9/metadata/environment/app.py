{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":27,"position":27,"stack":[[{"start":{"row":126,"column":72},"end":{"row":126,"column":130},"action":"remove","lines":[", principles=all_principles, difficulties=all_difficulties"],"id":343}],[{"start":{"row":126,"column":72},"end":{"row":126,"column":73},"action":"insert","lines":[","],"id":344}],[{"start":{"row":126,"column":73},"end":{"row":126,"column":74},"action":"insert","lines":[" "],"id":345},{"start":{"row":126,"column":74},"end":{"row":126,"column":75},"action":"insert","lines":["d"]},{"start":{"row":126,"column":75},"end":{"row":126,"column":76},"action":"insert","lines":["i"]},{"start":{"row":126,"column":76},"end":{"row":126,"column":77},"action":"insert","lines":["f"]},{"start":{"row":126,"column":77},"end":{"row":126,"column":78},"action":"insert","lines":["f"]},{"start":{"row":126,"column":78},"end":{"row":126,"column":79},"action":"insert","lines":["i"]},{"start":{"row":126,"column":79},"end":{"row":126,"column":80},"action":"insert","lines":["c"]},{"start":{"row":126,"column":80},"end":{"row":126,"column":81},"action":"insert","lines":["u"]},{"start":{"row":126,"column":81},"end":{"row":126,"column":82},"action":"insert","lines":["l"]},{"start":{"row":126,"column":82},"end":{"row":126,"column":83},"action":"insert","lines":["t"]},{"start":{"row":126,"column":83},"end":{"row":126,"column":84},"action":"insert","lines":["i"]}],[{"start":{"row":126,"column":84},"end":{"row":126,"column":85},"action":"insert","lines":["e"],"id":346},{"start":{"row":126,"column":85},"end":{"row":126,"column":86},"action":"insert","lines":["s"]},{"start":{"row":126,"column":86},"end":{"row":126,"column":87},"action":"insert","lines":["="]},{"start":{"row":126,"column":87},"end":{"row":126,"column":88},"action":"insert","lines":["a"]},{"start":{"row":126,"column":88},"end":{"row":126,"column":89},"action":"insert","lines":["l"]},{"start":{"row":126,"column":89},"end":{"row":126,"column":90},"action":"insert","lines":["l"]}],[{"start":{"row":126,"column":90},"end":{"row":126,"column":91},"action":"insert","lines":["_"],"id":347},{"start":{"row":126,"column":91},"end":{"row":126,"column":92},"action":"insert","lines":["d"]},{"start":{"row":126,"column":92},"end":{"row":126,"column":93},"action":"insert","lines":["i"]},{"start":{"row":126,"column":93},"end":{"row":126,"column":94},"action":"insert","lines":["f"]},{"start":{"row":126,"column":94},"end":{"row":126,"column":95},"action":"insert","lines":["f"]},{"start":{"row":126,"column":95},"end":{"row":126,"column":96},"action":"insert","lines":["i"]},{"start":{"row":126,"column":96},"end":{"row":126,"column":97},"action":"insert","lines":["c"]}],[{"start":{"row":126,"column":97},"end":{"row":126,"column":98},"action":"insert","lines":["u"],"id":348},{"start":{"row":126,"column":98},"end":{"row":126,"column":99},"action":"insert","lines":["l"]},{"start":{"row":126,"column":99},"end":{"row":126,"column":100},"action":"insert","lines":["t"]},{"start":{"row":126,"column":100},"end":{"row":126,"column":101},"action":"insert","lines":["i"]},{"start":{"row":126,"column":101},"end":{"row":126,"column":102},"action":"insert","lines":["e"]},{"start":{"row":126,"column":102},"end":{"row":126,"column":103},"action":"insert","lines":["s"]},{"start":{"row":126,"column":103},"end":{"row":126,"column":104},"action":"insert","lines":[","]}],[{"start":{"row":126,"column":104},"end":{"row":126,"column":105},"action":"insert","lines":[" "],"id":349},{"start":{"row":126,"column":105},"end":{"row":126,"column":106},"action":"insert","lines":["a"]}],[{"start":{"row":126,"column":105},"end":{"row":126,"column":106},"action":"remove","lines":["a"],"id":350}],[{"start":{"row":126,"column":105},"end":{"row":126,"column":106},"action":"insert","lines":["p"],"id":351},{"start":{"row":126,"column":106},"end":{"row":126,"column":107},"action":"insert","lines":["r"]},{"start":{"row":126,"column":107},"end":{"row":126,"column":108},"action":"insert","lines":["i"]},{"start":{"row":126,"column":108},"end":{"row":126,"column":109},"action":"insert","lines":["n"]},{"start":{"row":126,"column":109},"end":{"row":126,"column":110},"action":"insert","lines":["c"]},{"start":{"row":126,"column":110},"end":{"row":126,"column":111},"action":"insert","lines":["i"]},{"start":{"row":126,"column":111},"end":{"row":126,"column":112},"action":"insert","lines":["p"]},{"start":{"row":126,"column":112},"end":{"row":126,"column":113},"action":"insert","lines":["l"]}],[{"start":{"row":126,"column":113},"end":{"row":126,"column":114},"action":"insert","lines":["e"],"id":352},{"start":{"row":126,"column":114},"end":{"row":126,"column":115},"action":"insert","lines":["s"]},{"start":{"row":126,"column":115},"end":{"row":126,"column":116},"action":"insert","lines":["="]},{"start":{"row":126,"column":116},"end":{"row":126,"column":117},"action":"insert","lines":["a"]}],[{"start":{"row":126,"column":117},"end":{"row":126,"column":118},"action":"insert","lines":["l"],"id":353},{"start":{"row":126,"column":118},"end":{"row":126,"column":119},"action":"insert","lines":["l"]},{"start":{"row":126,"column":119},"end":{"row":126,"column":120},"action":"insert","lines":["_"]},{"start":{"row":126,"column":120},"end":{"row":126,"column":121},"action":"insert","lines":["p"]},{"start":{"row":126,"column":121},"end":{"row":126,"column":122},"action":"insert","lines":["r"]},{"start":{"row":126,"column":122},"end":{"row":126,"column":123},"action":"insert","lines":["i"]},{"start":{"row":126,"column":123},"end":{"row":126,"column":124},"action":"insert","lines":["n"]},{"start":{"row":126,"column":124},"end":{"row":126,"column":125},"action":"insert","lines":["c"]},{"start":{"row":126,"column":125},"end":{"row":126,"column":126},"action":"insert","lines":["i"]},{"start":{"row":126,"column":126},"end":{"row":126,"column":127},"action":"insert","lines":["p"]}],[{"start":{"row":126,"column":127},"end":{"row":126,"column":128},"action":"insert","lines":["l"],"id":354},{"start":{"row":126,"column":128},"end":{"row":126,"column":129},"action":"insert","lines":["e"]},{"start":{"row":126,"column":129},"end":{"row":126,"column":130},"action":"insert","lines":["s"]}],[{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["",""],"id":355},{"start":{"row":121,"column":0},"end":{"row":122,"column":0},"action":"insert","lines":["",""]},{"start":{"row":122,"column":0},"end":{"row":123,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":120,"column":0},"end":{"row":126,"column":149},"action":"insert","lines":["@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)"],"id":356}],[{"start":{"row":120,"column":0},"end":{"row":120,"column":26},"action":"remove","lines":["@app.route('/get_recipes')"],"id":357}],[{"start":{"row":121,"column":0},"end":{"row":121,"column":18},"action":"remove","lines":["def get_recipes():"],"id":358}],[{"start":{"row":132,"column":4},"end":{"row":132,"column":45},"action":"remove","lines":["all_cuisines=mongo.db.cuisine_type.find()"],"id":359},{"start":{"row":132,"column":4},"end":{"row":132,"column":49},"action":"insert","lines":["    all_cuisines=mongo.db.cuisine_type.find()"]}],[{"start":{"row":132,"column":8},"end":{"row":132,"column":9},"action":"remove","lines":["a"],"id":360}],[{"start":{"row":132,"column":8},"end":{"row":132,"column":9},"action":"insert","lines":["a"],"id":361}],[{"start":{"row":132,"column":4},"end":{"row":132,"column":8},"action":"remove","lines":["    "],"id":362}],[{"start":{"row":122,"column":4},"end":{"row":126,"column":4},"action":"remove","lines":["all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    "],"id":363}],[{"start":{"row":122,"column":0},"end":{"row":122,"column":4},"action":"remove","lines":["    "],"id":364}],[{"start":{"row":122,"column":0},"end":{"row":125,"column":4},"action":"remove","lines":["return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","","    "],"id":365}],[{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"remove","lines":["",""],"id":366},{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"remove","lines":["",""]},{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","@app.route('/get_cuisines')","def get_cuisines():","    all_cuisines=mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines, difficulties=all_difficulties, principles=all_principles)","","@app.route('/add_cuisine')","def add_cuisine():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_principle.html', principle=this_principle, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles = mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","@app.route('/get_principle_filtered_recipes/<principle_filter>', methods=['POST','GET'])","def get_principle_filtered_recipes(principle_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_principle_filter.html\", recipes=all_recipes, principle_filter=principle_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties, principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_difficulty.html', difficulty=this_difficulty, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","","@app.route('/get_difficulty_filtered_recipes/<difficulty_filter>', methods=['POST','GET'])","def get_difficulty_filtered_recipes(difficulty_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_difficulty_filter.html\", recipes=all_recipes, difficulty_filter=difficulty_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)",""],"id":367},{"start":{"row":0,"column":0},"end":{"row":251,"column":0},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_measures=mongo.db.measures.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles, measures=all_measures)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines)","    ","@app.route('/add_cuisine')","def add_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/filter_by_cuisine')","def filter_by_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"filter_by_cuisine.html\", cuisines=all_cuisines)","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","#app.route('/recipes/byCuisine/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    return render_template('edit_principle.html', principle=this_principle)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles =  mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","    ","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    return render_template('edit_difficulty.html', difficulty=this_difficulty)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","    ","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)",""]}],[{"start":{"row":0,"column":0},"end":{"row":251,"column":0},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_measures=mongo.db.measures.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles, measures=all_measures)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines)","    ","@app.route('/add_cuisine')","def add_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/filter_by_cuisine')","def filter_by_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"filter_by_cuisine.html\", cuisines=all_cuisines)","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","#app.route('/recipes/byCuisine/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    return render_template('edit_principle.html', principle=this_principle)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles =  mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","    ","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    return render_template('edit_difficulty.html', difficulty=this_difficulty)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","    ","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)",""],"id":368},{"start":{"row":0,"column":0},"end":{"row":282,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_cuisine')","def add_cuisine():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_principle.html', principle=this_principle, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles = mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","@app.route('/get_principle_filtered_recipes/<principle_filter>', methods=['POST','GET'])","def get_principle_filtered_recipes(principle_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_principle_filter.html\", recipes=all_recipes, principle_filter=principle_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties, principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_difficulty.html', difficulty=this_difficulty, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","","@app.route('/get_difficulty_filtered_recipes/<difficulty_filter>', methods=['POST','GET'])","def get_difficulty_filtered_recipes(difficulty_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_difficulty_filter.html\", recipes=all_recipes, difficulty_filter=difficulty_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":0,"column":0},"end":{"row":282,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_cuisine')","def add_cuisine():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_principle.html', principle=this_principle, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles = mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","@app.route('/get_principle_filtered_recipes/<principle_filter>', methods=['POST','GET'])","def get_principle_filtered_recipes(principle_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_principle_filter.html\", recipes=all_recipes, principle_filter=principle_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties, principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_difficulty.html', difficulty=this_difficulty, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","","@app.route('/get_difficulty_filtered_recipes/<difficulty_filter>', methods=['POST','GET'])","def get_difficulty_filtered_recipes(difficulty_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_difficulty_filter.html\", recipes=all_recipes, difficulty_filter=difficulty_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":369},{"start":{"row":0,"column":0},"end":{"row":250,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_measures=mongo.db.measures.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles, measures=all_measures)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines)","    ","@app.route('/add_cuisine')","def add_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/filter_by_cuisine')","def filter_by_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"filter_by_cuisine.html\", cuisines=all_cuisines)","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","#app.route('/recipes/byCuisine/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    return render_template('edit_principle.html', principle=this_principle)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles =  mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","    ","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    return render_template('edit_difficulty.html', difficulty=this_difficulty)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","    ","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":0,"column":0},"end":{"row":250,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_measures=mongo.db.measures.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles, measures=all_measures)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines)","    ","@app.route('/add_cuisine')","def add_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/filter_by_cuisine')","def filter_by_cuisine():","    all_cuisines=mongo.db.cuisine_type.find()","    return render_template(\"filter_by_cuisine.html\", cuisines=all_cuisines)","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","#app.route('/recipes/byCuisine/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    return render_template('edit_principle.html', principle=this_principle)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles =  mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","    ","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    return render_template('edit_difficulty.html', difficulty=this_difficulty)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","    ","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":370},{"start":{"row":0,"column":0},"end":{"row":282,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, flash","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'cookbook'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:31Wirpbj6677@cookery-website-xysxa.mongodb.net/cookbook?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","################################################################################### Recipe Operations","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    all_cuisines=mongo.db.cuisine_type.find()","    all_recipes=mongo.db.recipes.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template(\"list_recipes.html\", recipes=all_recipes, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_recipe')","def add_recipe():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_recipe.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","@app.route('/view_recipe/<recipe_id>')","def view_recipe(recipe_id):","    this_recipe=mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('view_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    this_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles =  mongo.db.principle_ingredients.find()","    all_difficulties = mongo.db.difficulty_levels.find()","    return render_template('edit_recipe.html', recipe=this_recipe, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/update_recipe/<recipe_id>', methods=['POST'])","def update_recipe(recipe_id):","    recipes =  mongo.db.recipes","    recipes.update({'_id': ObjectId(recipe_id)}, ","    {'recipe_name': request.form.get('recipe_name'),","    'cuisine_type': request.form.get('cuisine_type'),","    'servings': request.form.get('servings'),","    'prep_time': request.form.get('prep_time'),","    'cook_time': request.form.get('cook_time'),","    'calories_per_serve': request.form.get('calories_per_serve'),","    'difficulty': request.form.get('difficulty'),","    'blurb': request.form.get('blurb'),","    'isfreezable': request.form.get('isfreezable'),","    'ishealthy': request.form.get('ishealthy'),","    'isvegan': request.form.get('isvegan'),","    'isvegetarian': request.form.get('isvegetarian'),","    'ingredient1': request.form.get('ingredient1'),","    'measure1': request.form.get('measure1'),","    'quantity1': request.form.get('quantity1'),","    'ingredient2': request.form.get('ingredient2'),","    'measure2': request.form.get('measure2'),","    'quantity2': request.form.get('quantity2'),","    'ingredient3': request.form.get('ingredient3'),","    'measure3': request.form.get('measure3'),","    'quantity3': request.form.get('quantity3'),","    'ingredient4': request.form.get('ingredient4'),","    'measure4': request.form.get('measure4'),","    'quantity4': request.form.get('quantity4'),","    'ingredient5': request.form.get('ingredient5'),","    'measure5': request.form.get('measure5'),","    'quantity5': request.form.get('quantity5'),","    'ingredient6': request.form.get('ingredient6'),","    'measure6': request.form.get('measure6'),","    'quantity6': request.form.get('quantity6'),","    'ingredient7': request.form.get('ingredient7'),","    'measure7': request.form.get('measure7'),","    'quantity7': request.form.get('quantity7'),","    'ingredient8': request.form.get('ingredient8'),","    'measure8': request.form.get('measure8'),","    'quantity8': request.form.get('quantity8'),","    'ingredient9': request.form.get('ingredient9'),","    'measure9': request.form.get('measure9'),","    'quantity9': request.form.get('quantity9'),","    'ingredient10': request.form.get('ingredient10'),","    'measure10': request.form.get('measure10'),","    'quantity10': request.form.get('quantity10'),","    'method1': request.form.get('method1'),","    'method2': request.form.get('method2'),","    'method3': request.form.get('method3'),","    'method4': request.form.get('method4'),","    'method5': request.form.get('method5'),","    'method6': request.form.get('method6'),","    'method7': request.form.get('method7'),","    'method8': request.form.get('method8'),","    'method9': request.form.get('method9'),","    'method10': request.form.get('method10'),","    'principle_ingredient': request.form.get('principle_ingredient'),","    'contributor': request.form.get('contributor'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_recipes'))","    ","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","","######################################################################## Cuisine Operations","","    ","@app.route('/get_cuisines')","def get_cuisines():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"manage_cuisines.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","@app.route('/add_cuisine')","def add_cuisine():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_cuisine.html\", cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/edit_cuisine/<cuisine_id>')","def edit_cuisine(cuisine_id):","    this_cuisine =  mongo.db.cuisine_type.find_one({\"_id\": ObjectId(cuisine_id)})","    all_difficulties=mongo.db.difficulty_levels.find()","    all_cuisines=mongo.db.cuisine_type.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"edit_cuisine.html\", cuisine=this_cuisine, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","@app.route('/delete_cuisine/<cuisine_id>')","def delete_cuisine(cuisine_id):","    mongo.db.cuisine_type.remove({'_id': ObjectId(cuisine_id)})","    return redirect(url_for('get_cuisines'))","    ","@app.route('/insert_cuisine', methods=['POST'])","def insert_cuisine():","    cuisines = mongo.db.cuisine_type","    cuisines.insert_one(request.form.to_dict())","    return redirect(url_for('get_cuisines'))","    ","@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])","def update_cuisine(cuisine_id):","    cuisines =  mongo.db.cuisine_type","    cuisines.update({'_id': ObjectId(cuisine_id)}, ","    {'name': request.form.get('name'),","    'flag_image': request.form.get('flag_image')","    })","    return redirect(url_for('get_cuisines'))","","@app.route('/get_cuisine_filtered_recipes/<cuisine_filter>', methods=['POST','GET'])","def get_cuisine_filtered_recipes(cuisine_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"display_by_cuisine_filter.html\", recipes=all_recipes, cuisine_filter=cuisine_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","######################################################################## Principle Ingredient Operations","","@app.route('/get_principles')","def get_principles():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_principles.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/delete_principle/<principle_id>')","def delete_principle(principle_id):","    mongo.db.principle_ingredients.remove({'_id': ObjectId(principle_id)})","    return redirect(url_for('get_principles'))","    ","@app.route('/add_principle')","def add_principle():","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    return render_template(\"add_principle.html\", principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/insert_principle', methods=['POST'])","def insert_principle():","    principles = mongo.db.principle_ingredients","    principles.insert_one(request.form.to_dict())","    return redirect(url_for('get_principles'))","    ","@app.route('/edit_principle/<principle_id>')","def edit_principle(principle_id):","    this_principle =  mongo.db.principle_ingredients.find_one({\"_id\": ObjectId(principle_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_principle.html', principle=this_principle, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_principle/<principle_id>', methods=['POST'])","def update_principle(principle_id):","    principles = mongo.db.principle_ingredients","    principles.update({'_id': ObjectId(principle_id)}, ","    {'name': request.form.get('name'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_principles'))","","@app.route('/get_principle_filtered_recipes/<principle_filter>', methods=['POST','GET'])","def get_principle_filtered_recipes(principle_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_principle_filter.html\", recipes=all_recipes, principle_filter=principle_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","","","######################################################################## Principle Ingredient Operations","","@app.route('/get_difficulties')","def get_difficulties():","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"manage_difficulties.html\", difficulties=all_difficulties, cuisines=all_cuisines, principles=all_principles)","    ","@app.route('/delete_difficulty/<difficulty_id>')","def delete_difficulty(difficulty_id):","    mongo.db.difficulty_levels.remove({'_id': ObjectId(difficulty_id)})","    return redirect(url_for('get_difficulties'))","","@app.route('/add_difficulty')","def add_difficulty():","    all_difficulties=mongo.db.difficulty_levels.find()","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    return render_template(\"add_difficulty.html\", difficulties=all_difficulties, principles=all_principles, cuisines=all_cuisines)","    ","@app.route('/insert_difficulty', methods=['POST'])","def insert_difficulty():","    difficulties = mongo.db.difficulty_levels","    difficulties.insert_one(request.form.to_dict())","    return redirect(url_for('get_difficulties'))","    ","@app.route('/edit_difficulty/<difficulty_id>')","def edit_difficulty(difficulty_id):","    this_difficulty =  mongo.db.difficulty_levels.find_one({\"_id\": ObjectId(difficulty_id)})","    all_principles=mongo.db.principle_ingredients.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template('edit_difficulty.html', difficulty=this_difficulty, principles=all_principles, cuisines=all_cuisines, difficulties=all_difficulties)","    ","@app.route('/update_difficulty/<difficulty_id>', methods=['POST'])","def update_difficulty(difficulty_id):","    difficulties =  mongo.db.difficulty_levels","    difficulties.update({'_id': ObjectId(difficulty_id)}, ","    {'level': request.form.get('level'),","    'image_url': request.form.get('image_url')","    })","    return redirect(url_for('get_difficulties'))","","@app.route('/get_difficulty_filtered_recipes/<difficulty_filter>', methods=['POST','GET'])","def get_difficulty_filtered_recipes(difficulty_filter):","    all_recipes=mongo.db.recipes.find()","    all_cuisines =  mongo.db.cuisine_type.find()","    all_principles = mongo.db.principle_ingredients.find()","    all_difficulties=mongo.db.difficulty_levels.find()","    return render_template(\"display_by_difficulty_filter.html\", recipes=all_recipes, difficulty_filter=difficulty_filter, cuisines=all_cuisines, principles=all_principles, difficulties=all_difficulties)","    ","","#################################################################################################","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}]]},"ace":{"folds":[],"scrolltop":3182.8125,"scrollleft":0,"selection":{"start":{"row":282,"column":23},"end":{"row":282,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":219,"state":"start","mode":"ace/mode/python"}},"timestamp":1564835979586,"hash":"bd9c43a55e47cb765e1902c6b1b9538fb14dd7ec"}